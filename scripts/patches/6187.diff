diff --git a/app/bundles/CampaignBundle/Assets/js/campaign.js b/app/bundles/CampaignBundle/Assets/js/campaign.js
index 5f12bbd4a7..08bfd8b1c9 100644
--- a/app/bundles/CampaignBundle/Assets/js/campaign.js
+++ b/app/bundles/CampaignBundle/Assets/js/campaign.js
@@ -450,13 +450,13 @@ Mautic.campaignBuilderConnectionsMap = {
     'action': {
         'top': {
             'source': ['leadsource'],
-            'action': [],
+            'action': ['bottom'],
             'condition': ['yes', 'no'],
             'decision': ['yes', 'no']
         },
         'bottom': {
             'source': [],
-            'action': [],
+            'action': ['top'],
             'condition': ['top'],
             'decision': ['top']
         }
diff --git a/app/bundles/CampaignBundle/Executioner/EventExecutioner.php b/app/bundles/CampaignBundle/Executioner/EventExecutioner.php
index 823084ba31..47e43f1d42 100644
--- a/app/bundles/CampaignBundle/Executioner/EventExecutioner.php
+++ b/app/bundles/CampaignBundle/Executioner/EventExecutioner.php
@@ -194,6 +194,7 @@ public function executeLogs(Event $event, ArrayCollection $logs, Counter $counte
                 $evaluatedContacts = $this->actionExecutioner->execute($config, $logs);
                 $this->persistLogs($logs);
                 $this->executeConditionEventsForContacts($event, $evaluatedContacts->getPassed(), $counter);
+                $this->executeActionEventsForContacts($event, $evaluatedContacts->getPassed(), $counter);
                 break;
             case Event::TYPE_CONDITION:
                 $evaluatedContacts = $this->conditionExecutioner->execute($config, $logs);
@@ -315,6 +316,32 @@ private function checkForRemovedContacts(ArrayCollection $logs)
         }
     }
 
+    /**
+     * @param Event           $event
+     * @param ArrayCollection $contacts
+     * @param Counter|null    $counter
+     *
+     * @throws \Mautic\CampaignBundle\Executioner\Dispatcher\Exception\LogNotProcessedException
+     * @throws \Mautic\CampaignBundle\Executioner\Dispatcher\Exception\LogPassedAndFailedException
+     * @throws \Mautic\CampaignBundle\Executioner\Exception\CannotProcessEventException
+     * @throws \Mautic\CampaignBundle\Executioner\Scheduler\Exception\NotSchedulableException
+     */
+    private function executeActionEventsForContacts(Event $event, ArrayCollection $contacts, Counter $counter = null)
+    {
+        $childrenCounter = new Counter();
+        $actions         = $event->getChildrenByEventType(Event::TYPE_ACTION);
+        $childrenCounter->advanceEvaluated($actions->count());
+
+        $this->logger->debug('CAMPAIGN: Executing '.$actions->count().' actions under action ID '.$event->getId());
+
+        $this->executeEventsForContacts($actions, $contacts, $childrenCounter);
+
+        if ($counter) {
+            $counter->advanceTotalEvaluated($childrenCounter->getTotalEvaluated());
+            $counter->advanceTotalExecuted($childrenCounter->getTotalExecuted());
+        }
+    }
+
     /**
      * @param Event           $event
      * @param ArrayCollection $contacts
diff --git a/app/bundles/CampaignBundle/Tests/Command/TriggerCampaignCommandTest.php b/app/bundles/CampaignBundle/Tests/Command/TriggerCampaignCommandTest.php
index f9c146fb8b..5fddb2c61e 100644
--- a/app/bundles/CampaignBundle/Tests/Command/TriggerCampaignCommandTest.php
+++ b/app/bundles/CampaignBundle/Tests/Command/TriggerCampaignCommandTest.php
@@ -36,7 +36,7 @@ public function testCampaignExecutionForAll()
         $this->runCommand('mautic:campaigns:trigger', ['-i' => 1, '-l' => 10]);
 
         // Let's analyze
-        $byEvent = $this->getCampaignEventLogs([1, 2, 11, 12, 13]);
+        $byEvent = $this->getCampaignEventLogs([1, 2, 11, 12, 13, 16]);
         $tags    = $this->getTagCounts();
 
         // Everyone should have been tagged with CampaignTest and have been sent Campaign Test Email 1
@@ -61,6 +61,10 @@ public function testCampaignExecutionForAll()
         $this->assertCount(8, $byEvent[12]);
         $this->assertEquals(8, $tags['US:Action']);
 
+        // Those tagged with US:Action should also be tagged with ChainedAction by a chained event.
+        $this->assertCount(8, $byEvent[16]);
+        $this->assertEquals(8, $tags['ChainedAction']);
+
         // The rest (42) contacts are not from the US and should be labeled with NonUS:Action
         $this->assertCount(42, $byEvent[13]);
         $this->assertEquals(42, $tags['NonUS:Action']);
@@ -197,7 +201,7 @@ public function testCampaignExecutionForOne()
         $this->runCommand('mautic:campaigns:trigger', ['-i' => 1, '--contact-id' => 1]);
 
         // Let's analyze
-        $byEvent = $this->getCampaignEventLogs([1, 2, 11, 12, 13]);
+        $byEvent = $this->getCampaignEventLogs([1, 2, 11, 12, 13, 16]);
         $tags    = $this->getTagCounts();
 
         // Everyone should have been tagged with CampaignTest and have been sent Campaign Test Email 1
@@ -222,6 +226,10 @@ public function testCampaignExecutionForOne()
         $this->assertCount(0, $byEvent[12]);
         $this->assertTrue(empty($tags['US:Action']));
 
+        // None tagged with US:Action, so none should be tagged with ChainedAction by a chained event.
+        $this->assertCount(0, $byEvent[16]);
+        $this->assertTrue(empty($tags['ChainedAction']));
+
         // The rest (1) contacts are not from the US and should be labeled with NonUS:Action
         $this->assertCount(1, $byEvent[13]);
         $this->assertEquals(1, $tags['NonUS:Action']);
@@ -352,7 +360,7 @@ public function testCampaignExecutionForSome()
         $this->runCommand('mautic:campaigns:trigger', ['-i' => 1, '--contact-ids' => '1,2,3,4,19']);
 
         // Let's analyze
-        $byEvent = $this->getCampaignEventLogs([1, 2, 11, 12, 13]);
+        $byEvent = $this->getCampaignEventLogs([1, 2, 11, 12, 13, 16]);
         $tags    = $this->getTagCounts();
 
         // Everyone should have been tagged with CampaignTest and have been sent Campaign Test Email 1
@@ -377,6 +385,10 @@ public function testCampaignExecutionForSome()
         $this->assertCount(1, $byEvent[12]);
         $this->assertEquals(1, $tags['US:Action']);
 
+        // Those tagged with US:Action should also be tagged with ChainedAction by a chained event.
+        $this->assertCount(1, $byEvent[16]);
+        $this->assertEquals(1, $tags['ChainedAction']);
+
         // The rest (4) contacts are not from the US and should be labeled with NonUS:Action
         $this->assertCount(4, $byEvent[13]);
         $this->assertEquals(4, $tags['NonUS:Action']);
diff --git a/app/bundles/CampaignBundle/Tests/Command/campaign_schema.sql b/app/bundles/CampaignBundle/Tests/Command/campaign_schema.sql
index 30e48cfde8..9cab8235b2 100644
--- a/app/bundles/CampaignBundle/Tests/Command/campaign_schema.sql
+++ b/app/bundles/CampaignBundle/Tests/Command/campaign_schema.sql
@@ -13,7 +13,8 @@ VALUES
 	(6,'US:Action'),
 	(7,'NonUS:Action'),
 	(8,'Campaign Test'),
-	(9,'EmailNotOpen');
+	(9,'EmailNotOpen'),
+	(10,'ChainedAction');
 
 INSERT INTO `#__campaigns` (`allow_restart`,`id`,`category_id`,`is_published`,`date_added`,`created_by`,`created_by_user`,`date_modified`,`modified_by`,`modified_by_user`,`checked_out`,`checked_out_by`,`checked_out_by_user`,`name`,`description`,`publish_up`,`publish_down`,`canvas_settings`)
 VALUES
@@ -35,7 +36,8 @@ VALUES
 	(12,1,11,'Tag US:Action',NULL,'lead.changetags','action',3,'a:16:{s:14:\"canvasSettings\";a:2:{s:8:\"droppedX\";s:2:\"12\";s:8:\"droppedY\";s:3:\"357\";}s:4:\"name\";s:13:\"Tag US:Action\";s:11:\"triggerMode\";s:9:\"immediate\";s:11:\"triggerDate\";N;s:15:\"triggerInterval\";s:1:\"1\";s:19:\"triggerIntervalUnit\";s:1:\"d\";s:6:\"anchor\";s:3:\"yes\";s:10:\"properties\";a:1:{s:8:\"add_tags\";a:1:{i:0;s:1:\"6\";}}s:4:\"type\";s:15:\"lead.changetags\";s:9:\"eventType\";s:6:\"action\";s:15:\"anchorEventType\";s:9:\"condition\";s:10:\"campaignId\";s:47:\"mautic_801d9c4d0208e42f6f2bae3f87d0899c3ac45b32\";s:6:\"_token\";s:43:\"uNCD4MZ1GsWRZue4ErJSTW5Tj1CX5R-NYgc5Q_BrVjw\";s:7:\"buttons\";a:1:{s:4:\"save\";s:0:\"\";}s:8:\"add_tags\";a:1:{i:0;s:9:\"US:Action\";}s:11:\"remove_tags\";a:0:{}}',NULL,1,'d','immediate','yes','new679bfa3e62cb59526de7fd27b556443485a174f0',NULL,NULL),
 	(13,1,11,'Tag NonUS:Action',NULL,'lead.changetags','action',3,'a:16:{s:14:\"canvasSettings\";a:2:{s:8:\"droppedX\";s:3:\"489\";s:8:\"droppedY\";s:3:\"357\";}s:4:\"name\";s:16:\"Tag NonUS:Action\";s:11:\"triggerMode\";s:9:\"immediate\";s:11:\"triggerDate\";N;s:15:\"triggerInterval\";s:1:\"1\";s:19:\"triggerIntervalUnit\";s:1:\"d\";s:6:\"anchor\";s:2:\"no\";s:10:\"properties\";a:1:{s:8:\"add_tags\";a:1:{i:0;s:1:\"7\";}}s:4:\"type\";s:15:\"lead.changetags\";s:9:\"eventType\";s:6:\"action\";s:15:\"anchorEventType\";s:9:\"condition\";s:10:\"campaignId\";s:47:\"mautic_801d9c4d0208e42f6f2bae3f87d0899c3ac45b32\";s:6:\"_token\";s:43:\"uNCD4MZ1GsWRZue4ErJSTW5Tj1CX5R-NYgc5Q_BrVjw\";s:7:\"buttons\";a:1:{s:4:\"save\";s:0:\"\";}s:8:\"add_tags\";a:1:{i:0;s:12:\"NonUS:Action\";}s:11:\"remove_tags\";a:0:{}}',NULL,1,'d','immediate','no','new62e190055219ebe5beb9df4c4a505bb0860fffd4',NULL,NULL),
 	(14,1,3,'Tag EmailNotOpen',NULL,'lead.changetags','action',3,'a:19:{s:14:\"canvasSettings\";a:2:{s:8:\"droppedX\";s:4:\"1081\";s:8:\"droppedY\";s:3:\"374\";}s:4:\"name\";s:16:\"Tag EmailNotOpen\";s:11:\"triggerMode\";s:8:\"interval\";s:11:\"triggerDate\";N;s:15:\"triggerInterval\";s:1:\"1\";s:19:\"triggerIntervalUnit\";s:1:\"d\";s:6:\"anchor\";s:2:\"no\";s:10:\"properties\";a:1:{s:8:\"add_tags\";a:1:{i:0;s:1:\"9\";}}s:4:\"type\";s:15:\"lead.changetags\";s:9:\"eventType\";s:6:\"action\";s:15:\"anchorEventType\";s:8:\"decision\";s:10:\"campaignId\";s:1:\"1\";s:6:\"_token\";s:43:\"oRiunE5unGEBGhTql8VkzvtTkMHpwElCu5Ul4-_gd-I\";s:7:\"buttons\";a:1:{s:4:\"save\";s:0:\"\";}s:8:\"settings\";a:4:{s:5:\"label\";s:21:\"Modify contact\'s tags\";s:11:\"description\";s:37:\"Add tag to or remove tag from contact\";s:8:\"formType\";s:16:\"modify_lead_tags\";s:9:\"eventName\";s:38:\"mautic.lead.on_campaign_trigger_action\";}s:6:\"tempId\";s:43:\"newb3e5bfd9cdc154619ca0716b46f4a61328688a26\";s:2:\"id\";s:43:\"newb3e5bfd9cdc154619ca0716b46f4a61328688a26\";s:8:\"add_tags\";a:1:{i:0;s:12:\"EmailNotOpen\";}s:11:\"remove_tags\";a:0:{}}',NULL,2,'i','interval','no','newb3e5bfd9cdc154619ca0716b46f4a61328688a26',NULL,NULL),
-	(15, 1, 3, 'Tag EmailNotOpen Again', NULL, 'lead.changetags', 'action', 3, 'a:16:{s:14:\"canvasSettings\";a:2:{s:8:\"droppedX\";s:4:\"1612\";s:8:\"droppedY\";s:3:\"374\";}s:4:\"name\";s:22:\"Tag EmailNotOpen Again\";s:11:\"triggerMode\";s:8:\"interval\";s:11:\"triggerDate\";N;s:15:\"triggerInterval\";s:1:\"6\";s:19:\"triggerIntervalUnit\";s:1:\"i\";s:6:\"anchor\";s:2:\"no\";s:10:\"properties\";a:1:{s:8:\"add_tags\";a:1:{i:0;s:1:\"9\";}}s:4:\"type\";s:15:\"lead.changetags\";s:9:\"eventType\";s:6:\"action\";s:15:\"anchorEventType\";s:8:\"decision\";s:10:\"campaignId\";s:1:\"1\";s:6:\"_token\";s:43:\"Wd8bGtv2HJ6Nyf3K90Efoo2Rn2VkDWwXhwzCIPMiD-M\";s:7:\"buttons\";a:1:{s:4:\"save\";s:0:\"\";}s:8:\"add_tags\";a:1:{i:0;s:12:\"EmailNotOpen\";}s:11:\"remove_tags\";a:0:{}}', NULL, 6, 'i', 'interval', 'no', 'newf16dfec5f2a65aa9c527675e7be516020a90daa6', NULL, NULL);
+	(15,1,3,'Tag EmailNotOpen Again',NULL,'lead.changetags','action',3,'a:16:{s:14:\"canvasSettings\";a:2:{s:8:\"droppedX\";s:4:\"1612\";s:8:\"droppedY\";s:3:\"374\";}s:4:\"name\";s:22:\"Tag EmailNotOpen Again\";s:11:\"triggerMode\";s:8:\"interval\";s:11:\"triggerDate\";N;s:15:\"triggerInterval\";s:1:\"6\";s:19:\"triggerIntervalUnit\";s:1:\"i\";s:6:\"anchor\";s:2:\"no\";s:10:\"properties\";a:1:{s:8:\"add_tags\";a:1:{i:0;s:1:\"9\";}}s:4:\"type\";s:15:\"lead.changetags\";s:9:\"eventType\";s:6:\"action\";s:15:\"anchorEventType\";s:8:\"decision\";s:10:\"campaignId\";s:1:\"1\";s:6:\"_token\";s:43:\"Wd8bGtv2HJ6Nyf3K90Efoo2Rn2VkDWwXhwzCIPMiD-M\";s:7:\"buttons\";a:1:{s:4:\"save\";s:0:\"\";}s:8:\"add_tags\";a:1:{i:0;s:12:\"EmailNotOpen\";}s:11:\"remove_tags\";a:0:{}}',NULL,6,'i','interval','no','newf16dfec5f2a65aa9c527675e7be516020a90daa6',NULL,NULL),
+	(16,1,12,'Tag ChainedAction',NULL,'lead.changetags','action',4,'a:16:{s:14:\"canvasSettings\";a:2:{s:8:\"droppedX\";s:3:\"168\";s:8:\"droppedY\";s:3:\"439\";}s:4:\"name\";s:14:\"Chained Action\";s:11:\"triggerMode\";s:9:\"immediate\";s:11:\"triggerDate\";N;s:15:\"triggerInterval\";s:1:\"1\";s:19:\"triggerIntervalUnit\";s:1:\"d\";s:6:\"anchor\";s:6:\"bottom\";s:10:\"properties\";a:1:{s:8:\"add_tags\";a:1:{i:0;s:2:\"10\";}}s:4:\"type\";s:15:\"lead.changetags\";s:9:\"eventType\";s:6:\"action\";s:15:\"anchorEventType\";s:6:\"action\";s:10:\"campaignId\";s:1:\"1\";s:6:\"_token\";s:43:\"6xgHe74aRnc1V7AGzdang3-iJ0Ub5BKfbdU5NsxQmv0\";s:7:\"buttons\";a:1:{s:4:\"save\";s:0:\"\";}s:8:\"add_tags\";a:1:{i:0;s:13:\"ChainedAction\";}s:11:\"remove_tags\";a:0:{}}',NULL,1,'d','immediate',NULL,'new60f74507aeccf217f78647e41ae29af51debe666',NULL,NULL);
 
 INSERT INTO `#__lead_lists` (`id`,`is_published`,`date_added`,`created_by`,`created_by_user`,`date_modified`,`modified_by`,`modified_by_user`,`checked_out`,`checked_out_by`,`checked_out_by_user`,`name`,`description`,`alias`,`filters`,`is_global`)
 VALUES
